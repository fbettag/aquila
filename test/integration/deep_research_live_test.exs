defmodule Aquila.DeepResearchLiveTest do
  use ExUnit.Case, async: false
  use Aquila.Cassette

  @tag timeout: 480_000
  test "streams deep research and returns final report" do
    aquila_cassette "deep_research/stream-basic" do
      sink = Aquila.Sink.collector(self())

      {:ok, ref} =
        Aquila.deep_research_stream(
          [
            %{
              role: :user,
              content:
                "Provide a very short overview (max 3 bullet points) of the two most recent NASA Mars mission milestones."
            }
          ],
          sink: sink,
          timeout: 240_000,
          reasoning: %{effort: "low"}
        )

      {:ok, response} = Aquila.await_stream(ref, 480_000)

      assert response.text != ""
      assert is_binary(response.meta[:model])

      # Drain any remaining messages generated by the sink to keep the test mailbox clean
      flush_stream_messages(ref)
    end
  end

  defp flush_stream_messages(ref) do
    receive do
      {:aquila_chunk, _chunk, ^ref} -> flush_stream_messages(ref)
      {:aquila_event, _event, ^ref} -> flush_stream_messages(ref)
      {:aquila_tool_call, _state, _meta, ^ref} -> flush_stream_messages(ref)
      {:aquila_done, _text, _meta, ^ref} -> :ok
      {:aquila_error, _reason, ^ref} -> :ok
    after
      0 -> :ok
    end
  end
end
